//variables
$grid-gutter-width:         30px;
//mixins
// Centered container element
@mixin container-fixed($gutter: $grid-gutter-width)
{
    margin-right: auto;
    margin-left: auto;
    padding-right: ($gutter / 2);
    padding-left: ($gutter / 2);
}


// Creates a wrapper for a series of columns
@mixin make-row($gutter: $grid-gutter-width)
{
    margin-left:  ceil(($gutter / -2));
    margin-right: floor(($gutter / -2));
    display: table;
}


@mixin make-columns($i:1,$columns:12)
{
    .c#{$i}-of-#{$columns} {
    	width: $i / $columns * 100%;
    }
}

@mixin center($width: null, $height: null) {
    position: absolute;
    top: 50%;
    left: 50%;

    @if not $width and not $height {
        transform: translate(-50%, -50%);
    } @else if $width and $height {
        width: $width;
        height: $height;
        margin: -($width / 2) #{0 0} -($height / 2);
    } @else if not $height {
        width: $width;
        margin-left: -($width / 2);
        transform: translateY(-50%);
    } @else {
        height: $height;
        margin-top: -($height / 2);
        transform: translateX(-50%);
    }
}

//classes
.container
{
    max-width: 960px;
    @include container-fixed;
}

.row
{
    @include make-row;
}
.col
{
    position: relative;

    display: table-cell;
    padding-right: ($grid-gutter-width / 2);
    padding-left: ($grid-gutter-width / 2);
    vertical-align: top;

    min-height: 1px;
}
@include make-columns(1,3);
@include make-columns(2,3);
@include make-columns(1,4);
@include make-columns(3,4);
